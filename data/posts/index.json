[
  {
    "title": "[Day6] Read Rust Atomics and Locks",
    "createdDate": "2023-05-17",
    "categories": [
      "cs"
    ],
    "file": "day6-read-rust-atomics-and-locks_230517",
    "excerpt": "Immutable borrowing(&) + Mutable borrowing(&mut) = fully prevent data races"
  },
  {
    "title": "[Day5] Read Rust Atomics and Locks",
    "createdDate": "2023-05-11",
    "categories": [
      "cs"
    ],
    "file": "day5-read-rust-atomics-and-locks_230511",
    "excerpt": "Some ways to share ownership to threads: `static`, `Box::leak(Box::new([1, 2, 3]));`, `Arc`"
  },
  {
    "title": "[Day4] Read Rust Atomics and Locks",
    "createdDate": "2023-05-08",
    "categories": [
      "cs"
    ],
    "file": "day4-read-rust-atomics-and-locks_230508",
    "excerpt": "std::thread::scope spawn scoped threads => possible to safely borrow local variables. eg:"
  },
  {
    "title": "[Golang] Golang 的 Set",
    "createdDate": "2023-05-04",
    "categories": [
      "cs"
    ],
    "file": "golang-set-in-golang_230504",
    "excerpt": "某天在使用 Golang 的時候，突然發現原來 Golang 沒有像其他語言一樣有實作 Set 的 data structure，稍微爬了文後發現，原來 Golang 會用 map 來模擬 Set ，以下是僅是小小的紀錄。"
  },
  {
    "title": "[Day3] Read Rust Atomics and Locks",
    "createdDate": "2023-04-17",
    "categories": [
      "cs"
    ],
    "file": "day3-read-rust-atomics-and-locks_230409",
    "excerpt": "The `std::thread::spawn` function is actually just a convenient shorthand for `std::thread::Builder::new().spawn().unwrap()"
  },
  {
    "title": "[Golang] Polymorphism in Golang",
    "createdDate": "2023-04-06",
    "editedDate": "2023-05-08",
    "categories": [
      "cs"
    ],
    "file": "golang-polymorphism-in-golang_230508",
    "excerpt": "Polymorphism 的目的？ 藉由 Polymorphism 使 code 更加靈活、reusable、易擴展和可維護"
  },
  {
    "title": "[Day2] Read Rust Atomics and Locks",
    "createdDate": "2023-03-04",
    "categories": [
      "cs"
    ],
    "file": "day2-read-rust-atomics-and-locks_230304",
    "excerpt": "A process should always ask OS kernel first and then interact with another process in Rust, to spawn a new thread"
  },
  {
    "title": "[JavaScript] 我對 Object key 的錯誤認知",
    "createdDate": "2022-09-17",
    "categories": [
      "cs",
      "web"
    ],
    "file": "javascript-my-misunderstanding-about-object-key_220917",
    "excerpt": "我原本一直以為假若使用 Array 或者 Object 當作另一個 Object 的 key 時，會使用他們的 reference, 直到我遇到了 bug 並且簡單做了測試"
  }
]